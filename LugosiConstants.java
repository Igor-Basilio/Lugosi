/* Generated By:JavaCC: Do not edit this line. LugosiConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LugosiConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SKIP_WS = 1;
  /** RegularExpression Id. */
  int ALPHA = 2;
  /** RegularExpression Id. */
  int DIGIT = 3;
  /** RegularExpression Id. */
  int ALPHA_NUMERIC = 4;
  /** RegularExpression Id. */
  int SPECIAL_CHAR = 5;
  /** RegularExpression Id. */
  int NEWLINE = 6;
  /** RegularExpression Id. */
  int WHITE_SPACE = 7;
  /** RegularExpression Id. */
  int MAIN = 8;
  /** RegularExpression Id. */
  int ACHAVES = 9;
  /** RegularExpression Id. */
  int FCHAVES = 10;
  /** RegularExpression Id. */
  int VOID = 11;
  /** RegularExpression Id. */
  int LET = 12;
  /** RegularExpression Id. */
  int FLOAT = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int SEMICOLON = 16;
  /** RegularExpression Id. */
  int BOOLEAN = 17;
  /** RegularExpression Id. */
  int ATTRIB = 18;
  /** RegularExpression Id. */
  int APAREN = 19;
  /** RegularExpression Id. */
  int FPAREN = 20;
  /** RegularExpression Id. */
  int IF = 21;
  /** RegularExpression Id. */
  int ELSE = 22;
  /** RegularExpression Id. */
  int WHILE = 23;
  /** RegularExpression Id. */
  int DO = 24;
  /** RegularExpression Id. */
  int READIO = 25;
  /** RegularExpression Id. */
  int RETURN = 26;
  /** RegularExpression Id. */
  int PRINTIO = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int PLUS = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int MULT = 32;
  /** RegularExpression Id. */
  int DIV = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int OR = 35;
  /** RegularExpression Id. */
  int LESSOP = 36;
  /** RegularExpression Id. */
  int MOREOP = 37;
  /** RegularExpression Id. */
  int LESSEQ = 38;
  /** RegularExpression Id. */
  int MOREEQ = 39;
  /** RegularExpression Id. */
  int EQUALS = 40;
  /** RegularExpression Id. */
  int MODULO = 41;
  /** RegularExpression Id. */
  int DEF = 42;
  /** RegularExpression Id. */
  int COMMA = 43;
  /** RegularExpression Id. */
  int NUM = 44;
  /** RegularExpression Id. */
  int ID = 45;
  /** RegularExpression Id. */
  int TEMPLATE_LITERAL = 46;
  /** RegularExpression Id. */
  int STRING_LITERAL = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<SKIP_WS>",
    "<ALPHA>",
    "<DIGIT>",
    "<ALPHA_NUMERIC>",
    "<SPECIAL_CHAR>",
    "<NEWLINE>",
    "<WHITE_SPACE>",
    "\"main\"",
    "\"{\"",
    "\"}\"",
    "\"void\"",
    "\"let\"",
    "\"float\"",
    "\"string\"",
    "\"int\"",
    "\";\"",
    "\"bool\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"readIO\"",
    "\"return\"",
    "\"printIO\"",
    "\"true\"",
    "\"false\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"%\"",
    "\"def\"",
    "\",\"",
    "<NUM>",
    "<ID>",
    "<TEMPLATE_LITERAL>",
    "<STRING_LITERAL>",
  };

}
